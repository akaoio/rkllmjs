name: Test & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Primary testing - RK3588 target focused
  test-primary:
    name: Primary Test (RK3588 Target)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]  # Node.js 18+ only
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run validation (RULES.md compliance)
      run: npm run validate
      
    - name: Build C++ modules
      run: npm run build:cpp
      
    - name: Build TypeScript
      run: npm run build:ts
      
    - name: Run tests
      run: npm run test:node

  # Code quality checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run Prettier check
      run: npx prettier --check src/**/*.ts
      
    - name: TypeScript type checking
      run: npx tsc --noEmit

  # Build verification for RK3588
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Clean build
      run: npm run clean
      
    - name: Full build (C++ + TypeScript)
      run: |
        npm run build:cpp
        npm run build:ts
      
    - name: Verify RK3588 assets
      run: |
        if [ -f "libs/rkllm/aarch64/librkllmrt.so" ]; then
          echo "✅ RK3588 NPU library present"
        else
          echo "❌ RK3588 NPU library missing"
          exit 1
        fi
        
        if [ -f "libs/rkllm/include/rkllm.h" ]; then
          echo "✅ RKLLM headers present"
        else
          echo "❌ RKLLM headers missing"
          exit 1
        fi