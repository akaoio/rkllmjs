name: Release & Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run validation
      run: npm run validate
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build:ts
      continue-on-error: true
      
    - name: Version bump (if workflow_dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
    - name: Get version from tag
      if: github.event_name == 'push'
      run: |
        echo "NEW_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
    - name: Generate changelog
      run: |
        echo "# Release v${{ env.NEW_VERSION }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## What's Changed" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s (%h)" --since="$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo '1 month ago')" >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo 'HEAD')...v${{ env.NEW_VERSION }}" >> CHANGELOG.md
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: success()
    permissions:
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for publishing
      run: npm run build:ts
      continue-on-error: true
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true
        
    - name: Publish summary
      run: |
        echo "## ðŸ“¦ Package Published" >> $GITHUB_STEP_SUMMARY
        echo "Package **${{ github.repository }}** has been published to NPM" >> $GITHUB_STEP_SUMMARY
        echo "Version: **$(node -p "require('./package.json').version")**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Install with:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "npm install $(node -p "require('./package.json').name")" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: release
    if: success()
    permissions:
      pages: write
      id-token: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate documentation
      run: npm run docs
      continue-on-error: true
      
    - name: Setup Pages
      uses: actions/configure-pages@v4
      continue-on-error: true
      
    - name: Upload documentation
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/
      continue-on-error: true
      
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      continue-on-error: true