name: Release & Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    name: Create Release (RK3588 Target)
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run validation
      run: npm run validate
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build:ts
      
    - name: Verify RK3588 assets
      run: |
        echo "Verifying RK3588 NPU assets for release..."
        if [ ! -f "libs/rkllm/aarch64/librkllmrt.so" ]; then
          echo "❌ Missing RK3588 NPU library"
          exit 1
        fi
        
        if [ ! -f "libs/rkllm/include/rkllm.h" ]; then
          echo "❌ Missing RKLLM headers"
          exit 1
        fi
        
        echo "✅ RK3588 assets verified for Orange Pi 5 Plus"
      
    - name: Version bump (if workflow_dispatch)
      if: github.event_name == 'workflow_dispatch'
      run: |
        npm version ${{ github.event.inputs.version }} --no-git-tag-version
        echo "NEW_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
        
    - name: Get version from tag
      if: github.event_name == 'push'
      run: |
        echo "NEW_VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
        
    - name: Generate changelog
      run: |
        echo "# Release v${{ env.NEW_VERSION }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## 🎯 RK3588 NPU Support for Orange Pi 5 Plus" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "This release targets Orange Pi 5 Plus with RK3588 chip and NPU support." >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "**Target Platform:**" >> CHANGELOG.md
        echo "- Hardware: Orange Pi 5 Plus (RK3588 SBC)" >> CHANGELOG.md
        echo "- OS: Armbian Bookworm, Ubuntu (Orange Pi 5 optimized)" >> CHANGELOG.md
        echo "- Architecture: ARM64 (aarch64)" >> CHANGELOG.md
        echo "- NPU: RK3588 Neural Processing Unit" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## What's Changed" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log --pretty=format:"- %s (%h)" --since="$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo '1 month ago')" >> CHANGELOG.md || echo "- Initial release for RK3588 NPU support" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo 'HEAD')...v${{ env.NEW_VERSION }}" >> CHANGELOG.md
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }} (RK3588 Orange Pi 5)
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  publish-npm:
    name: Publish to NPM (RK3588 Package)
    runs-on: ubuntu-latest
    needs: release
    if: success()
    permissions:
      packages: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for publishing
      run: npm run build:ts
      
    - name: Update package for RK3588 target
      run: |
        # Update package.json with platform-specific info
        node -e "
          const pkg = require('./package.json');
          pkg.os = ['linux'];
          pkg.cpu = ['arm64'];
          pkg.keywords.push('orange-pi-5', 'armbian', 'sbc');
          require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "
      
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true
        
    - name: Publish summary
      run: |
        echo "## 📦 RK3588 Package Published" >> $GITHUB_STEP_SUMMARY
        echo "Package **${{ github.repository }}** has been published to NPM" >> $GITHUB_STEP_SUMMARY
        echo "Version: **$(node -p "require('./package.json').version")**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Target Platform:** Orange Pi 5 Plus with RK3588 NPU" >> $GITHUB_STEP_SUMMARY
        echo "**Supported OS:** Armbian Bookworm, Ubuntu (Orange Pi 5 optimized)" >> $GITHUB_STEP_SUMMARY
        echo "**Architecture:** ARM64 (aarch64)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Installation on Orange Pi 5 Plus:" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# On Orange Pi 5 Plus with Armbian/Ubuntu:" >> $GITHUB_STEP_SUMMARY
        echo "npm install $(node -p "require('./package.json').name")" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  deploy-docs:
    name: Deploy Documentation (RK3588 Focus)
    runs-on: ubuntu-latest
    needs: release
    if: success()
    permissions:
      pages: write
      id-token: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Generate documentation
      run: |
        npm run docs
        
        # Add RK3588 specific documentation
        mkdir -p docs/platform
        cat > docs/platform/orange-pi-5.md << 'EOF'
        # Orange Pi 5 Plus Setup Guide
        
        ## Hardware Requirements
        - Orange Pi 5 Plus with RK3588 chip
        - Minimum 8GB RAM recommended
        - MicroSD card (64GB+ recommended)
        
        ## Operating System
        - Armbian Bookworm (recommended)
        - Armbian with GUI
        - Ubuntu (Orange Pi 5 optimized version)
        
        ## Installation
        \`\`\`bash
        # Install Node.js on Orange Pi 5 Plus
        curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
        sudo apt-get install -y nodejs
        
        # Install RKLLMJS
        npm install rkllmjs
        \`\`\`
        
        ## NPU Verification
        \`\`\`bash
        # Check if RK3588 NPU is available
        ls -la /dev/dri/
        lsmod | grep rockchip
        \`\`\`
        EOF
      continue-on-error: true
      
    - name: Setup Pages
      uses: actions/configure-pages@v5
      continue-on-error: true
      
    - name: Upload documentation
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/
      continue-on-error: true
      
    - name: Deploy to GitHub Pages
      uses: actions/deploy-pages@v4
      continue-on-error: true